var RocknCoder = RocknCoder || {};

(function () {
  "use strict";

  var sineTable = [
    // sine, cosine, tangent
    [0, 1, 0],
    [0.0175, 0.9998, 0.0175],
    [0.0349, 0.9994, 0.0349],
    [0.0523, 0.9986, 0.0524],
    [0.0698, 0.9976, 0.0699],
    [0.0872, 0.9962, 0.0875],
    [0.1045, 0.9945, 0.1051],
    [0.1219, 0.9925, 0.1228],
    [0.1392, 0.9903, 0.1405],
    [0.1564, 0.9877, 0.1584],
    [0.1736, 0.9848, 0.1763],
    [0.1908, 0.9816, 0.1944],
    [0.2079, 0.9781, 0.2126],
    [0.2250, 0.9744, 0.2309],
    [0.2419, 0.9703, 0.2493],
    [0.2588, 0.9659, 0.2679],
    [0.2756, 0.9613, 0.2867],
    [0.2924, 0.9563, 0.3057],
    [0.3090, 0.9511, 0.3249],
    [0.3256, 0.9455, 0.3443],
    [0.3420, 0.9397, 0.3640],
    [0.3584, 0.9336, 0.3839],
    [0.3746, 0.9272, 0.4040],
    [0.3907, 0.9205, 0.4245],
    [0.4067, 0.9135, 0.4452],
    [0.4226, 0.9063, 0.4663],
    [0.4384, 0.8988, 0.4877],
    [0.4540, 0.8910, 0.5095],
    [0.4695, 0.8829, 0.5317],
    [0.4848, 0.8746, 0.5543],
    [0.5000, 0.8660, 0.5774],
    [0.5150, 0.8572, 0.6009],
    [0.5299, 0.8480, 0.6249],
    [0.5446, 0.8387, 0.6494],
    [0.5592, 0.8290, 0.6745],
    [0.5736, 0.8192, 0.7002],
    [0.5878, 0.8090, 0.7265],
    [0.6018, 0.7986, 0.7536],
    [0.6157, 0.7880, 0.7813],
    [0.6293, 0.7771, 0.8098],
    [0.6428, 0.7660, 0.8391],
    [0.6561, 0.7547, 0.8693],
    [0.6691, 0.7431, 0.9004],
    [0.6820, 0.7314, 0.9325],
    [0.6947, 0.7193, 0.9657],
    [0.7071, 0.7071, 10000],
    [0.7193, 0.6947, 1.0355],
    [0.7314, 0.6820, 1.0724],
    [0.7431, 0.6691, 1.1106],
    [0.7547, 0.6561, 1.1504],
    [0.7660, 0.6428, 1.1918],
    [0.7771, 0.6293, 1.2349],
    [0.7880, 0.6157, 1.2799],
    [0.7986, 0.6018, 1.3270],
    [0.8090, 0.5878, 1.3764],
    [0.8192, 0.5736, 1.4281],
    [0.8290, 0.5592, 1.4826],
    [0.8387, 0.5446, 1.5399],
    [0.8480, 0.5299, 1.6003],
    [0.8572, 0.5150, 1.6643],
    [0.8660, 0.5000, 1.7321],
    [0.8746, 0.4848, 1.8040],
    [0.8829, 0.4695, 1.8807],
    [0.8910, 0.4540, 1.9626],
    [0.8988, 0.4384, 2.0503],
    [0.9063, 0.4226, 2.1445],
    [0.9135, 0.4067, 2.2460],
    [0.9205, 0.3907, 2.3559],
    [0.9272, 0.3746, 2.4751],
    [0.9336, 0.3584, 2.6051],
    [0.9397, 0.3420, 2.7475],
    [0.9455, 0.3256, 2.9042],
    [0.9511, 0.3090, 3.0777],
    [0.9563, 0.2924, 3.2709],
    [0.9613, 0.2756, 3.4874],
    [0.9659, 0.2588, 3.7321],
    [0.9703, 0.2419, 4.0108],
    [0.9744, 0.2250, 4.3315],
    [0.9781, 0.2079, 4.7046],
    [0.9816, 0.1908, 5.1446],
    [0.9848, 0.1736, 5.6713],
    [0.9877, 0.1564, 6.3138],
    [0.9903, 0.1392, 7.1154],
    [0.9925, 0.1219, 8.1443],
    [0.9945, 0.1045, 9.5144],
    [0.9962, 0.0872, 11.4301],
    [0.9976, 0.0698, 14.3007],
    [0.9986, 0.0523, 19.0811],
    [0.9994, 0.0349, 28.6363],
    [0.9998, 0.0175, 57.2900],
    [1, 0, 0]
  ];

  RocknCoder.GetSine = (function(inDegree) {
    var degree = inDegree % 360,
      offset = Math.abs(degree % 90),
      sign = degree >= 180? -1: 1,
      index = (degree >= 90 && degree < 180) || (degree >= 270 && degree < 360) ? 1: 0,
      sine =  sineTable[offset][index] * sign;

    return sine;
  });
})();